plugins {
    id 'java'
    id 'application'
    id("war")
//    id "org.flywaydb.flyway" version "9.1.2"
}

group 'ru.clevertec'
version '1.0-SNAPSHOT'
description = 'ClevertecCheck'

application {
    mainClass = 'ru.clevertec.console.CheckRunner'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.logging.log4j:log4j-api:2.18.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.18.0'
    implementation 'com.google.code.gson:gson:2.9.0'
//    implementation 'org.flywaydb:flyway-core:9.2.0'
    implementation 'com.itextpdf:itextpdf:5.5.13.3'
    implementation 'org.postgresql:postgresql:42.5.0'

    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    testImplementation 'org.springframework:spring-test:5.3.22'
    implementation 'org.springframework:spring-context:5.3.22'
    implementation 'org.springframework.data:spring-data-jpa:2.7.2'

    implementation 'org.hibernate.common:hibernate-commons-annotations:5.0.1.Final'
    implementation 'org.hibernate:hibernate-core:5.6.1.Final'

    compileOnly 'javax.servlet:javax.servlet-api:4.0.1'
    compileOnly 'javax.servlet.jsp:javax.servlet.jsp-api:2.3.3'
    compileOnly "org.apache.tomee:javaee-api:8.0-6"
    compileOnly 'org.projectlombok:lombok:1.18.24'

    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.0'
}

test {
    useJUnitPlatform()
}

java.sourceCompatibility = JavaVersion.VERSION_15


/*tasks.withType(Test) {
    useJUnitPlatform()
    jvmArgs '--enable-preview'
}
compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}*/

/*//This task copies the 1.txt-file from /testTask to testTask/tempCopy
task copyFiles(type: Copy) {
    from 'testTask'
    into 'testTask/tempCopy'
    include '1.txt'
}

//This task downloads 2.txt-file from gitHub.com to a local folder /testTask/tempDownload
task downloadFiles(type: FileDownloader) {
    sourceUrl = 'https://github.com/DmitryPoverov/Clevertec-Check/blob/master/testTask/2.txt?raw=true'
    outputFile = new File('testTask/tempDownload/2.txt')
}

//This is a body of the downloadFiles task
class FileDownloader extends DefaultTask {
    @Input
    String sourceUrl

    @OutputFile
    File outputFile

    @TaskAction
    void download() {
        try {
            ant.get(src: sourceUrl, dest: outputFile)
        } catch (Exception e) {
            println e
        }
    }
}*/

/*// 1st training task
task hello {
    println("Task1")
    println("Task1 add")
}
hello.doFirst {
    println("Task1 doFirst")
}
hello.doLast {
    println("Task1 doLast")
}


// The 2nd training task which one depends on the 1st task
task bye(dependsOn:hello) {
}
bye {
    println("Task2")
    println("Task2 add")
}*/
